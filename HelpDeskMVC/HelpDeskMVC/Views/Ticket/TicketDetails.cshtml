@model HelpDeskEntities.Ticket.Ticket
@using HelpDeskCommon.CommonClasses

@{
    ViewBag.Title = "TicketDetails";
    var role = HttpContext.Current.User.IsInRole("admin") ? "admin" : (HttpContext.Current.User.IsInRole("HelpdeskUser") ? "HelpdeskUser" : (HttpContext.Current.User.IsInRole("SupeUser") ? "SupeUser" : (HttpContext.Current.User.IsInRole("SupportStaff") ? "SupportStaff" : "EndUser")));
    var CurrentUser = Convert.ToInt32(GenericClass.CsvToStringArray(User.Identity.Name)[2]);
}

<div class="row">
    <div class="col-lg-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Ticket Details</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-2">
                        <label>Description:</label>
                    </div>
                    <div class="col-lg-6">
                        @Model.TicketDescription
                    </div>
                    <div class="col-lg-2">
                        <label>Attachments:</label>
                        @{
                            if (Model.AllFiles.Count > 0)
                            {
                                foreach (var file in Model.AllFiles)
                                {
                                    <a href="@Url.Action("DownloadFile", "Ticket", new { filename = file.FileName, OriginalFileName = file.FileDisplayName })" title="@file.FileDisplayName"><i class="fa fa-paperclip"></i></a>
                                }
                            }
                            else
                            {
                                <span>No Files</span>
                            }
                        }
                    </div>
                    <div class="col-lg-2">
                        @{
                            if (Model.Status.ID != 3)
                            {
                                if ((Model.Status.ID != 4) && (role == "HelpdeskUser"))
                                {
                                    if (Model.AssignedTo.UID == 0)
                                    {
                                        <a data-fancybox data-type="ajax" data-src="@Url.Action("TicketAssign", "Ticket", new { id = Model.TicketModule.ModuleID, tktID = Model.TicketID })" href="#" class="btn btn-sm btn-success">
                                            <i class="fa fa-gears"> Assign</i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a data-fancybox data-type="ajax" data-src="@Url.Action("EsclateTicket", "Ticket", new { id = Model.TicketModule.ModuleID, tktID = Model.TicketID })" href="#" class="btn btn-sm btn-success">
                                            <i class="fa fa-gears"> Esclate</i>
                                        </a>
                                    }
                                }
                                if (role != "HelpdeskUser" && role != "SupportStaff" && Model.CreatedBy == CurrentUser)
                                {
                                    <a href="#" onclick="CloseTicket(@Model.TicketID)" class="btn btn-sm btn-danger"> Close</a>
                                }
                                if (role != "admin" && role != "EndUser" && Model.CreatedBy != CurrentUser && Model.Status.ID != 4)
                                {
                                    @*<a href="#" onclick="ResolveTicket(@Model.TicketID)" class="btn btn-sm btn-success"> Resolve</a>*@
                                    <a data-fancybox data-type="ajax" data-src="@Url.Action("ResolveTicket", "Ticket", new { tktID = Model.TicketID })" href="#" class="btn btn-sm btn-success">
                                        <i class="fa fa-gears"> Resolve</i>
                                    </a>
                                }
                                if ((role == "EndUser" || role == "SupeUser") && (Model.Status.ID == 4 && Model.CreatedBy == CurrentUser))
                                {
                                    <a href="#" onclick="ReopenTicket(@Model.TicketID)" class="btn btn-sm bg-maroon"> Reopen</a>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <label>Status:</label>
                    </div>
                    <div class="col-lg-3">
                        @Model.Status.Status
                    </div>
                    <div class="col-lg-3">
                        <label>Priority:</label>
                    </div>
                    <div class="col-lg-3">
                        <div class="row">
                            <div id="priorityDiv" class="col-lg-6">@Model.TicketPriority</div>
                            @{
                                if (role == "HelpdeskUser" && Model.Status.ID != 4 && Model.Status.ID != 3)
                                {
                                    <div class="col-lg-6">
                                        <a href="#" id="editPriority" onclick="updatePriority()"><i class="fa fa-pencil"></i></a>
                                        <a href="#" id="savePriority" onclick="savePriority()"><i class="fa fa-save"></i></a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <label>Module</label>
                    </div>
                    <div class="col-lg-3">
                        @Model.TicketModule.Module
                    </div>
                    <div class="col-lg-3">
                        <label>Created Date</label>
                    </div>
                    <div class="col-lg-3">
                        @Model.CreatedDate
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <label>Created By</label>
                    </div>
                    <div class="col-lg-3">
                        @Model.CreatedByUser.Name (@Model.CreatedByUser.EmailID)
                    </div>
                    <div class="col-lg-3">
                        <label>Assigned to</label>
                    </div>
                    <div class="col-lg-3">
                        @{
                            if (Model.AssignedTo.UID == 0)
                            {
                        <span>@Model.AssignedTo.Name</span>
                            }
                            else
                            { <span>@Model.AssignedTo.Name (@Model.AssignedTo.EmailID)</span> }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-6">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Ticket TimeLine</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-sm-12">
                        <ul class="timeline">
                            <!-- timeline time label -->
                            @{
                                var lgDate = DateTime.Now.AddYears(-20);
                                foreach (var logItem in Model.TktLogs)
                                {
                                    var logDateTime = Convert.ToDateTime(logItem.LogDateTime);

                                    if (lgDate.Date != logDateTime.Date)
                                    {
                                        lgDate = Convert.ToDateTime(logItem.LogDateTime);
                                        <li class="time-label">
                                            <span class="bg-red">
                                                @logDateTime.ToString("dd MMM. yyyy")
                                            </span>
                                        </li>

                                    }
                                    <li>
                                        @{
                                            if (logItem.LogTypeID == 1)
                                            {
                                                <i class="fa fa-file-text bg-blue"></i>
                                            }
                                            else
                                            {
                                                <i class="fa fa-envelope-open bg-blue"></i>
                                            }
                                        }

                                        <div class="timeline-item">
                                            <span class="time"><i class="fa fa-clock-o"></i> @logDateTime.Hour : @logDateTime.Minute</span>
                                            @{
                                                if (logItem.LogTypeID == 1)
                                                {
                                                    <h3 class="timeline-header"><a href="#">@logItem.LogBy.Name </a> <small>@logItem.Logtype</small></h3>
                                                }
                                                else
                                                {
                                                    <h3 class="timeline-header"><a href="#">@logItem.LogBy.Name </a> <small>Commented </small></h3>
                                                }
                                            }
                                            <div class="timeline-body">
                                                @logItem.LogContent
                                                @{
                                                    if (logItem.Files.Count > 0)
                                                    {
                                                        @*<br />*@<div class="pull-right">
                                                            @foreach (var file in logItem.Files)
                                                            {
                                                                <a href="@Url.Action("DownloadFile", "Ticket", new { filename = file.FileName, OriginalFileName = file.FileDisplayName })" title="@file.FileDisplayName"><i class="fa fa-paperclip"></i></a>
                                                            }
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </li>
                                                    }
                            }
                            <li>
                                <i class="fa fa-envelope bg-gray"></i>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="box box-info direct-chat direct-chat-info">
            <div class="box-header with-border">
                <h3 class="box-title">Comments</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <div class="input-group input-group-sm">
                    <input id="cmntTb" type="text" class="form-control">
                    <span class="input-group-btn">
                        <a onclick="postComment()" href="#" class="btn btn-info btn-flat"><i class="fa fa-send"></i></a>
                    </span>
                    <span id="msg"></span>
                </div>
                <!-- Conversations are loaded here -->
                <div class="direct-chat-messages" id="cmnts">
                    <!--Here Comment content will come-->
                </div>
                <!--/.direct-chat-messages-->
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        refreshComment();
        $("#savePriority").hide();
        $("#editPriority").show();
        $("#cmntTb").keypress(function (e) {
            if (e.which == 13) {
                postComment();
            }
        });

        //var d = new Date();
        //d.setHours(0,0,0,0);
        //setInterval((function(){

        //    return function(){
        //        d.setSeconds(d.getSeconds()+1);
        //        var t = d.toLocaleTimeString("en-US", {hour12: false});
        //        document.getElementById("demo").innerHTML = t;
        //    }
        //})(), 1000);

    });

    function updatePriority(){
        $("#editPriority").hide();
        $("#priorityDiv").html('');
        $("#priorityDiv").append('<div class="form-group" id="priorityDropDown">'+      
        '<select class="form-control" id="prioritySelect">'+
          '<option value="0">Not Set</option>'+
          '<option value="1">Low</option>'+
          '<option value="2">Medium</option>'+
          '<option value="3">High</option>'+
        '</select>      '+
      '</div>');
        $("#savePriority").show();
    }

    function savePriority(){
        
        var selectedVal=$('#priorityDropDown :selected').val();
        var selectedText=$('#priorityDropDown :selected').text();
        $("#priorityDiv").html('');
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("SetTicketPriority", "Ticket")',
            data: { tktID: @Model.TicketID,priorityID:selectedVal },
            async: false,
            success: function (data) {
                if (data.status) {
                    $("#priorityDiv").append('<span>'+selectedText+'</span>');
                } else {
                    swal("Sorry", data.response, "error");
                }
            }
        });        

        $("#savePriority").hide();
        $("#priorityDropDown").hide();
        $("#editPriority").show();
    }

    function ReopenTicket(id){
        swal("Reopened "+id);
    }

    function postComment() {
        var cmnt = $("#cmntTb").val();
        if (cmnt.length == 0) {

        } else {
            var model = {
                Comment: cmnt,
                TicketID: '@Model.TicketID'
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("TicketComment", "Ticket")',
                data: { tc: model },
                async: true,
                success: function (data) {
                    if (data.status) {
                        $("#cmntTb").val("");
                        refreshComment();
                    } else {
                        swal("Sorry", "Something went wrong please try later", "error");
                    }
                }
            });
        }
    }

    function refreshComment() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("TicketComments", "Ticket")',
            data: { tktID: @Model.TicketID },
            async: true,
            success: function (data) {
                if(data.length > 0) {
                    $('#cmnts').html('');

                    var cmntTemplate="";
                    for (i = 0; i < data.length; i++) {

                        cmntTemplate=cmntTemplate+'<div class="direct-chat-msg right">'+
                                            '<div class="direct-chat-info clearfix">'+
                                                 '<span class="direct-chat-name pull-left">'+
                                              data[i].CommentBy.Name +
                                              '</span>'+
                                                '<span class="direct-chat-timestamp pull-right">'+
                                             data[i].CommentDate+
                                             '</span>'+
                                            '</div>'+
                                            '<div class="direct-chat-text">'+
                                          data[i].Comment+
                                            '</div>'+
                                        '</div>';
                    }
                    $('#cmnts').append(cmntTemplate);
                }
            }
        });
    }

    function CloseTicket(id) {
        console.log(id);
        swal({
            title: 'Are you sure?',
            text: "You want to close this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            console.log(result);
            if (result) {
                closeTicketSubmit(id);
            }
        })
    }

    function closeTicketSubmit(id) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("CloseTicket", "Ticket")',
            data: { tktID: id },
            success: function (data) {
                if (data.status) {
                    swal('Deleted!', 'Ticket closed.', 'success');
                    location.reload();
                } else {
                    swal('Sorry!', 'Unable to close.', 'error');
                }
            }
        });
    }

</script>