@model IEnumerable<HelpDeskEntities.Ticket.Ticket>

@{
    ViewBag.Title = "Index";
    var role = HttpContext.Current.User.IsInRole("admin") ? "admin" : (HttpContext.Current.User.IsInRole("HelpdeskUser") ? "HelpdeskUser" : (HttpContext.Current.User.IsInRole("SupeUser") ? "SupeUser" : "EndUser"));
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Recently Added Tickets</h3>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    <div class="box-body">
        <table id="TktTbl" class="table table-responsive">
           <thead>
               <tr>
                   <th>
                       TicketDescription
                   </th>
                   <th>
                       CreatedBy
                   </th>
                   <th>
                       Nature
                   </th>
                   <th>
                       Module
                   </th>
                   <th>Status</th>
                   <th>
                       CreatedDate
                   </th>
                   <th>Assigned To</th>
                   <th></th>
               </tr>
           </thead>
             <tbody>
                 @foreach (var item in Model)
                 {
                     var TktDesc = item.TicketDescription.Length <= 20 ? item.TicketDescription : item.TicketDescription.Substring(0, 20);
                     <tr>
                         <td title="@item.TicketDescription">
                             <a href="@Url.Action("TicketDetails","Ticket",new {tktID=item.TicketID })">@TktDesc</a>                             
                         </td>
                         <td title="@item.CreatedByUser.EmailID">
                             @Html.DisplayFor(modelItem => item.CreatedByUser.Name)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.Nature.Nature)
                         </td>
                         <td>
                             @Html.DisplayFor(modelItem => item.TicketModule.Module)
                         </td>
                         <td>@item.Status.Status</td>
                         <td>
                             @Html.DisplayFor(modelItem => item.CreatedDate)
                         </td>
                         <td>@item.AssignedTo.Name</td>
                         <td>
                             @{
                                 if (role != "EndUser")
                                 {
                                     <a data-fancybox data-type="ajax" data-src="@Url.Action("TicketAssign", "Ticket", new { id = item.TicketModule.ModuleID, tktID = item.TicketID })" href="#" class="btn btn-sm btn-success">
                                         <i class="fa fa-gears"> Assign</i>
                                     </a>
                                     if (item.Status.ID != 3)
                                     {
                                        <a href="#" onclick="CloseTicket(@item.TicketID)" class="btn btn-sm btn-danger">Close</a>
                                     }
                                 }
                                 }
                             @*<a data-fancybox data-type="ajax" data-src="@Url.Action("TicketComment", "Ticket", new { tktID = item.TicketID })" href="#" class="btn btn-sm btn-success">
                                 <i class="fa fa-comment"> Comment</i>
                             </a>*@
                         </td>
                     </tr>
                                 }
             </tbody>           
        </table>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#TktTbl').DataTable({
            responsive: true,
            "fnDrawCallback": function (oSettings) {
                //Below code will hide Pagination if row count is less than 5
                if ($('#TktTbl tr').length < 5) {
                    $('.dataTables_paginate').hide();
                }
            }
        });        
    });

    function CloseTicket(id) {
        console.log(id);
        swal({
            title: 'Are you sure?',
            text: "You want to close this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            console.log(result);
            if (result) {
                closeTicketSubmit(id);
            }
        })
    }

    function closeTicketSubmit(id) {        
        $.ajax({
            type: "GET",
            url: '@Url.Action("CloseTicket", "Ticket")',
            data: { tktID: id },
            success: function (data) {
                if (data.status) {
                    swal('Deleted!', 'Ticket closed.', 'success');
                    location.reload();
                } else {
                    swal('Sorry!', 'Unable to close.', 'error');
                }
            }
        });
    }
</script>
        
