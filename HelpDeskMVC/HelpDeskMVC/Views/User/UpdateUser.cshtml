@model HelpDeskMVC.Models.AddUserViewModel

@{
    ViewBag.Title = "Update User Profile";
}
<link href="~/Content/AdminTheme/Multiselect/select2.min.css" rel="stylesheet" />
<script src="~/Content/AdminTheme/Multiselect/select2.full.min.js"></script>

<div class="text-center">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Update User</h3>
                    <span>@TempData["msg"]</span>
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                <div class="box-body">
                    <div class="row">
                        <div class="col-lg-6">
                            <input type="hidden" id="UID" name="UID" value="@Model.User.UID">
                            <div class="form-group">
                                <label>Name</label>
                                <input type="text" class="form-control" id="Name" placeholder="Enter Name">
                                <span class="text-danger" id="validateName"></span>
                            </div>

                            <div class="form-group">
                                <label>Email</label>
                                <input type="email" class="form-control" id="email" placeholder="Enter email">
                                <span class="text-danger" id="validateEmail"></span>
                            </div>                            
                        </div>

                        <div class="col-lg-6">                            
                            <div class="form-group">
                                <label>Contact No.</label>
                                <input type="number" class="form-control" id="Contact" placeholder="Enter contact">
                                <span class="text-danger" id="validateContact"></span>
                            </div>

                            <div class="form-group">
                                <label>Choose User Group</label><br />
                                <p>
                                    @foreach (var item in Model.UserGroupList)
                                    {
                                        <input type="radio" name="UserGroup" value="@item.GroupID"> @item.UsrGroup
                                    }
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="form-group optionDiv">
                        <label>Assign Modules</label>
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-search"></i>
                            </div>
                            <select class="form-control select2 multiSelectDropDown" multiple="multiple" data-placeholder="Select Modules" style="width: 100%;"></select>
                            <span class="text-danger" id="validateModules"></span>
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <a href="@Url.Action("Index","User")" class="pull-left btn btn-sm btn-info"><i class="fa fa-arrow-left"></i> Back to User List</a>
                    <a href="#" onclick="UpdateUser()" class="btn btn-primary">Update</a>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        $(".select2").select2();
        $(".optionDiv").hide();

        $("input[name=UserGroup]").click(function () {
            var UGroup = $('input[name=UserGroup]:checked').val();
            ShowHideModule(UGroup);
        });
        getAllModules();
        getUserData();
    });

    function getUserData() {
        var UID = $("#UID").val();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("UserData","User")',
            data: { UID: UID },
            async: false,
            success: function (res) {
                $("#Name").val(res.Name);
                $("#email").val(res.EmailID);
                $("#Contact").val(res.ContactNo);
                $("input[name=UserGroup][value='" + res.UserGroup.GroupID + "']").prop("checked", true);
                ShowHideModule(res.UserGroup.GroupID);
                var defaultInnerHTML = $(".select2-selection__rendered").html();
                $(".select2-selection__rendered").html('');
                var selectedModuleLiData = '';
                if (res.Modules.length > 0) {
                    for (var i = 0; i <= res.Modules.length - 1; i++) {
                        selectedModuleLiData = selectedModuleLiData +
                            '<li class="select2-selection__choice" title="' + res.Modules[i].Module + '">' +
                            //'<span class="select2-selection__choice__remove" role="presentation">×</span>' +
                            '"' + res.Modules[i].Module + '"</li>';
                    }
                }
                $(".select2-selection__rendered").append(selectedModuleLiData);
                $(".select2-selection__rendered").append(defaultInnerHTML);
            }
        });
    }

    

    function UpdateUser() {
        var err = ValidateAllFields();
        if (err.errorCount == 0) {
          var selectedData = $('.multiSelectDropDown').val();
          var UG=  $('input[name=UserGroup]:checked').val();
          var User = {
              UID: $("#UID").val(),
              Name: $("#Name").val(),
              EmailID: $("#email").val(),
              ContactNo: $("#Contact").val(),
              UserGroup: { UsrGroup: "", GroupID: UG }
          };

            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateUser", "User")',
                data: { modules: selectedData, usr: User },
                async: true,
                success: function (data) {
                    //makeAllFieldBlank();
                    if (data.status) {
                        swal({
                            title: data.msg,
                            timer: 8000,
                            type: 'success'
                        }).catch(swal.noop);
                    } else {
                        swal({
                            title: data.msg,
                            timer: 8000,
                            type: 'error'
                        }).catch(swal.noop);
                    }
                }
            });
        } else {
            swal({
                title: 'Unable to submit',
                html: err.errors,
                timer: 4000,
                type: 'error'
            }).catch(swal.noop);
        }
    }

    function getAllModules() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("ModuleList", "Miscellaneous")',
            dataType: 'json',
            async: true,
            success: function (data) {
                $('.multiSelectDropDown').empty();
                for (var i = 0; i < data.length; i++) {
                    $('.multiSelectDropDown').append("<option value=" + data[i].ModuleID + ">" + data[i].Module + "</option>");
                }
            }
        });
    }

    function ValidateAllFields() {
        var err = 0;
        var errOutput = "";
        errOutput = "<ul>";
        if ($("#Name").val().length == 0) {
            err++;
            errOutput = errOutput + '<li class="text-danger">Name is Missing</li><br />';
        } if ($("#email").val().length == 0) {
            err++;
            errOutput = errOutput + '<li class="text-danger">Email is Missing</li><br />';
        } if (!isEmail($("#email").val())) {
            err++;
            errOutput = errOutput + '<li class="text-danger">Email is Not Valid</li><br />';
        } if ($("#Contact").val().length != 0 && $("#Contact").val().length != 10) {
            err++;
            errOutput = errOutput + '<li class="text-danger">Contact Number Must be of 10 Digits</li><br />';
        } if (!$('input[name=UserGroup]:checked').val()) {
            err++;
            errOutput = errOutput + '<li class="text-danger">Please select one User Group</li><br />';
        //} if (($('input[name=UserGroup]:checked').val() == 2 || $('input[name=UserGroup]:checked').val() == 3) && $('.multiSelectDropDown').val().length == 0) {
        //    err++;
        //    errOutput = errOutput + '<li class="text-danger">Select any one Module</li><br />';
        }
        return { errorCount: err, errors: errOutput + " </ul>" };
    }

    function isEmail(email) {
        var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex.test(email);
    }

    function ShowHideModule(UGroup) {
        if (UGroup == 1 || UGroup == 4) {
            $(".optionDiv").hide('slow');
        } else if (UGroup == 2 || UGroup == 3 || UGroup == 5) {
            $(".optionDiv").show('slow');
        }
    }


    //function makeAllFieldBlank() {
    //    $("#Name").val('');
    //    $("#email").val('');
    //    $("#Contact").val('');
    //    $("#Password").val('');
    //    $("#CPassword").val('');
    //    $('.multiSelectDropDown').val('');
    //}

    @*function EmailExist(email) {
        var val = false;
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("CheckExistingEmail", "Miscellaneous")',
            data: { EmailID: email },
            dataType: 'json',
            async: false,
            success: function (data) {
                val = data;
            }
        });
        return val;
    }*@
</script>