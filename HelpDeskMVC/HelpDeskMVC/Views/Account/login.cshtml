@model HelpDeskEntities.Account.Login
@{
    Layout = null;
}

<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login/Registration Form Transition</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel='stylesheet prefetch' href='https://fonts.googleapis.com/css?family=Open+Sans'>
    <link href="~/Content/Login.css" rel="stylesheet" />
    <!--Jquery for validation-->
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>



    <!-- FancyBox 3.2.5-->
    <link href="~/Content/jquery.fancybox.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.fancybox.pack.js"></script>
    <link href="~/Content/jquery.fancybox-buttons.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.fancybox-buttons.js"></script>
    <script src="~/Scripts/jquery.fancybox-media.js"></script>
    <link href="~/Content/jquery.fancybox-thumbs.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.fancybox-thumbs.js"></script>

    <!-- SweetAlert -->
    <link href="~/Content/SweetAlert/sweetalert2.min.css" rel="stylesheet" />
    <script src="~/Content/SweetAlert/sweetalert2.min.js"></script>   
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $('.msg').fadeOut('slow');
            }, 10000);
        });
    </script>
</head>
<body>    
    <div class="cont">        
        <div class="form sign-in text-center">
            <span class="text-danger msg">@TempData["errMsg"]</span>
            <span class="text-success msg">@TempData["succMsg"]</span>
            <h2>Welcome back</h2>
            
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <label>
                    <span>Email</span>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @placeholder = "Registered Email", @autofocus = "autofocus" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })                    
                </label>
                <label>
                    <span>Password</span>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @placeholder = "Your Password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </label>
                <button type="submit" class="submit">Sign In</button>
            }         
        </div>
        <div class="sub-cont">
            <div class="img">
                <div class="img__text m--up">
                    <h2>Forgot password?</h2>
                    <p>Click on below button</p>
                </div>
                <div class="img__text m--in">
                    <h2>Please wait !</h2>
                    <p>You will receive an email on your email ID </p>
                </div>
                <div class="img__btn">
                    <span class="m--up">Go</span>
                    <span class="m--in">Sign In</span>
                </div>
            </div>
            <div class="form sign-up">
                <h2>Enter your registered Email ID</h2>                                
                <label>
                    <span>Email</span>
                    <input type="email" placeholder="Registered Email" id="forgetPwd" />
                </label>                
                <button type="button" onclick="forgetPass()" id="btnSub" class="submit">Submit</button>
            </div>
        </div>
    </div>

    <script src="~/Scripts/Login.js"></script>
    <script>        
        function forgetPass() {
            $(".submit").attr("disabled", true);
            email = $("#forgetPwd").val();
            var err = ValidateEmail(email);
            if (err.errorCount == 0) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SendResetPasswordMail", "Account")',
                    data: { email: email },
                    async: true,
                    beforeSend: function () {
                        $.fancybox.showLoading();
                        $('#btnSub').prop('disabled', true);
                    },
                    success: function (data) {
                        $.fancybox.hideLoading();
                        $('#btnSub').prop('disabled', false);
                        $("#forgetPwd").val('');
                        $(".submit").removeAttr("disabled");
                        if (data.status) {
                            swal({
                                title: "We have sent a mail to reset your password",
                                timer: 8000,
                                type: 'success'
                            }).catch(swal.noop);
                        }
                        else {
                            swal({
                                title: 'Unable to Update Password',
                                html: data.message,
                                timer: 8000,
                                type: 'error'
                            }).catch(swal.noop);
                        }
                    }
                });
            } else {
                $("#forgetPwd").val('');
                $(".submit").removeAttr("disabled");
                swal({
                    title: 'Unable to Update Password',
                    html: err.errors,
                    timer: 8000,
                    type: 'error'
                }).catch(swal.noop);
            }
        }

        function ValidateEmail(eml) {
            var err = 0;
            var errOutput = "";
            errOutput = "<ul>";
            if (eml.length == 0) {
                err++;
                errOutput = errOutput + '<li class="text-danger">Enter your Registered Email</li><br />';
            } if (!isEmail(eml) && eml.length >= 1) {
                err++;
                errOutput = errOutput + '<li class="text-danger">Email is Not Valid</li><br />';
            } if (!EmailExist(eml) && eml.length >= 1 && isEmail(eml)) {
                err++;
                errOutput = errOutput + '<li class="text-danger">This Email is Not Registered with us</li><br />';
            }
            return { errorCount: err, errors: errOutput + " </ul>" };
        }

        function EmailExist(email) {            
            var val = false;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("CheckExistingEmail", "Miscellaneous")',
                data: { EmailID: email },
                dataType: 'json',
                async: false,
                success: function (data) {
                    val = data;
                }
            });
            return val;
        }

        function isEmail(email) {
            var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            return regex.test(email);
        }
    </script>
</body>
</html>